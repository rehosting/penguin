core:
  root_shell: false

env:
  igloo_init: /init

pseudofiles:
  /dev/missing:
    ioctl:
      '*':
        model: symex

lib_inject:
  extra: |
    #include <fcntl.h>
    #include <sys/ioctl.h>
    #include <stdio.h>
    
    void check_dev_missing() {
        printf("check_dev_missing\n");

        int fd = open("/dev/missing", O_RDWR);

        printf("opened /dev/missing\n");
    
        if(fd == -1) {
            printf("/dev/missing could not be opened!\n");
            return;
        }

        printf("running ioctl...\n");
    
        int ret = ioctl(fd, 0x1337);

        printf("returned from ioctl\n");
    
        if(ret == 1234) {
            printf("found the return value\n");
        } else {
            printf("bad ioctl return value error %i\n", ret);
        }
    }

static_files:
  /init:
    type: inline_file
    contents: |
      #!/igloo/utils/micropython
      print("starting test")

      import ffi

      print("imported ffi")

      lib_inject = ffi.open("lib_inject.so")

      print("lib_inject: " + repr(lib_inject))

      check_dev_missing = lib_inject.func("v", "check_dev_missing", "")

      print("check_dev_missing: " + repr(check_dev_missing))

      check_dev_missing()

      print("test complete")

    mode: 73
