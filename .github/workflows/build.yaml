name: Test and Release Container

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build_container:
    runs-on: rehosting-arc

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: rehosting
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Pull latest Docker image for cache
        run: docker pull rehosting/penguin:latest || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: rehosting/penguin:${{ github.sha }}
          cache-from: type=registry,ref=rehosting/penguin:latest
          cache-to: type=inline

  run_tests:
    needs: build_container
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kernel: ["4.10"]
        arch: ["armel", "mipsel", "mipseb", "mips64eb", "aarch64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: rehosting
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Pull the image
        run: |
          docker pull rehosting/penguin:${{ github.sha }}
          docker tag rehosting/penguin:${{ github.sha }} rehosting/penguin:latest
      - name: Run tests for ${{ matrix.arch }}
        run: |
          timeout 30m python3 $GITHUB_WORKSPACE/tests/unit_tests/test.py \
            --kernel-version ${{ matrix.kernel }} \
            --arch ${{ matrix.arch }} \
            --output-file test_results_${{ matrix.kernel }}_${{ matrix.arch }}.json
        continue-on-error: true
      - name: Prepare test results and logs
        run: |
          mkdir -p artifact_${{ matrix.kernel }}_${{ matrix.arch }}
          cp test_results_${{ matrix.kernel }}_${{ matrix.arch }}.json artifact_${{ matrix.kernel }}_${{ matrix.arch }}/
          for dir in $GITHUB_WORKSPACE/tests/unit_tests/results/*_${{ matrix.kernel }}_${{ matrix.arch }}; do
            dir_name=$(basename "$dir")
            clean_name=${dir_name%_${{ matrix.kernel }}_${{ matrix.arch }}}
            cp "$dir/test_log.txt" "artifact_${{ matrix.kernel }}_${{ matrix.arch }}/${clean_name}_test_log.txt"
          done
      - name: Upload test results and logs
        uses: actions/upload-artifact@v4
        with:
          name: test-results-and-logs-${{ matrix.kernel }}-${{ matrix.arch }}
          path: artifact_${{ matrix.kernel }}_${{ matrix.arch }}

  process_results:
    needs: run_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kernel: ["4.10"]
        arch: ["armel", "mipsel", "mipseb", "mips64eb", "aarch64"]
        test:
          - env_unset
          - env_cmp
          - pseudofile_missing
          - pseudofile_ioctl
          - hostfile
          - shared_dir
          - net_missing
          - netdevs
          - proc_self
          - pseudofile_readdir
          - pseudofile_mmap_shared
          - bash
          - proc_mtd_dynamic
          - proc_mtd_missing
          - proc_mtd
          - pseudofile_devfs
          - pseudofile_sysfs
          - uboot_env_cmp
    steps:
      - name: Download test results and logs
        uses: actions/download-artifact@v4
        with:
          name: test-results-and-logs-${{ matrix.kernel }}-${{ matrix.arch }}
          path: test_artifact
      - name: Process test result
        run: |
          result=$(jq -r '."${{ matrix.kernel }}"."${{ matrix.arch }}"."${{ matrix.test }}"' test_artifact/test_results_${{ matrix.kernel }}_${{ matrix.arch }}.json)
          echo "Test result for ${{ matrix.test }} on ${{ matrix.arch }} (kernel ${{ matrix.kernel }}): $result"
          if [ "$result" != "PASS" ]; then
            echo "Test failed. Outputting log file:"
            cat test_artifact/${{ matrix.kernel }}_${{ matrix.arch }}/${{ matrix.test }}_test_log.txt
            exit 1
          fi
      - name: Upload failure details
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-test-details-${{ matrix.kernel }}-${{ matrix.arch }}-${{ matrix.test }}
          path: test_artifact/${{ matrix.test }}_${{ matrix.kernel }}_${{ matrix.arch }}/test_log.txt

  push_docker_and_release:
    needs: build_container
    runs-on: rehosting-arc
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Setup runner
        run: |
              sudo apt-get update;
              sudo apt-get install -yy curl jq
      - name: Get next version
        uses: reecetech/version-increment@2023.10.1
        id: version
        with:
          use_api: true
      
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.v-version }}
          release_name: Release ${{ steps.version.outputs.v-version }} ${{ github.ref }}
          body: |
            Release ${{ steps.version.outputs.v-version }} @${{ github.ref }}
          draft: false
          prerelease: false

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: rehosting
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Bump latest tag
        run: |
              docker pull rehosting/penguin:${{ github.sha }};
              docker tag rehosting/penguin:${{ github.sha }} rehosting/penguin:latest;
              docker tag rehosting/penguin:${{ github.sha }} rehosting/penguin:${{ steps.version.outputs.v-version }};
              docker push -a rehosting/penguin
