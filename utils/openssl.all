#!/igloo/utils/sh

KEYS_DIR=/igloo/keys/

ARGS="$@"

LOGGER=/firmadyne/ttyS1

function finish {
  # If exit code was non-zero, print an error message
  if [ $? -ne 0 ]; then
    echo "openssl.shim: Error generating keys for openssl. Bailing on shim and running" > $LOGGER
    echo "openssl.shim: original with args $ARGS" > $LOGGER
    exec /igloo/utils/openssl.orig $ARGS
  fi
}
trap finish EXIT

if [[ "$1" == "req" ]]; then
    keyfile=""
    certfile=""
    new_req=0
    x509=0
    keysize="1024"
    config_file=""


    # Parse arguments
    while [ "$#" -gt 0 ]; do
        case "$1" in
            -config)
                config_file="$2"
                shift 2
                ;;
            -keyout)
                keyfile="$2"
                shift 2
                ;;
            -out)
                certfile="$2"
                shift 2
                ;;
            -new)
                new_req=1
                shift
                ;;
            -newkey)
                keytype="$2"
                case "$keytype" in
                    rsa:*)
                        keysize="${keytype#rsa:}"
                        ;;
                esac
                shift 2
                ;;
            -x509)
                x509=1
                shift
                ;;
            -days)
                shift 2
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ -n "$config_file" && -f "$config_file" ]]; then
        default_keyfile=$(/igloo/utils/busybox grep -E "^default_keyfile" "$config_file" | /igloo/utils/busybox cut -d '=' -f2 | /igloo/utils/busybox tr -d ' ')
        if [[ -z "$keyfile" ]]; then
            # Might be empty, but if keyfile was already empty it doesn't matter
            keyfile="$default_keyfile"
        fi
    fi

    # Check that necessary arguments were provided
    if [[ -z "$keyfile" || -z "$certfile" || -z "$keysize" ]]; then
        echo "openssl.shim: Missing arguments: -keyout, -out, or -newkey not provided" > $LOGGER
        exit 1
    fi

    # If x509, append _x509 to keyname
    keyname="openssl"
    if [[ $x509 -eq 1 ]]; then
        keyname="${keyname}_x509"
    fi
    keyname="${keyname}_${keysize}"

    # Copy keys from /keys/ directory based on key type
    keypath="${KEYS_DIR}/${keyname}.key"
    certpath="${KEYS_DIR}/${keyname}.pem"

    if [[ -e "${keypath}" && -e "${certpath}" ]]; then
        # If both key and certificate go to the same file, concatenate them
        if [ "$keyfile" = "$certfile" ]; then
            # Concatenate private key and certificate into the output file
            cat "${keypath}" "${certpath}" > "${keyfile}"
        else
            # Otherwise copy them into separate files
            cp "${keypath}" "${keyfile}"
            cp "${certpath}" "${certfile}"
        fi
    else
        echo "openssl.shim: Pre-computed key or certificate not found for size ${keysize} at ${keypath} or ${certpath}" > $LOGGER
        exec /igloo/utils/openssl.orig "$@"
    fi

else
    # No need to log this in general, we expect to see it quite often
    #echo "openssl:shim Unsupported openssl command $@" > $LOGGER
    exec /igloo/utils/openssl.orig $@
fi